version: '3.8'

services:
  # Infrastructure Services
  postgres:
    image: postgres:14-alpine
    container_name: the-dot-postgres-prod
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: the_dot
    ports:
      - "5433:5432"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./scripts/init-databases.sql:/docker-entrypoint-initdb.d/init-databases.sql
    networks:
      - the-dot-network-prod

  redis:
    image: redis:7-alpine
    container_name: the-dot-redis-prod
    ports:
      - "6380:6379"
    volumes:
      - redis_data_prod:/data
    networks:
      - the-dot-network-prod

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: the-dot-rabbitmq-prod
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5673:5672"
      - "15673:15672"
    volumes:
      - rabbitmq_data_prod:/var/lib/rabbitmq
    networks:
      - the-dot-network-prod

  minio:
    image: minio/minio:latest
    container_name: the-dot-minio-prod
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9002:9000"
      - "9003:9001"
    volumes:
      - minio_data_prod:/data
    command: server /data --console-address ":9001"
    networks:
      - the-dot-network-prod

  # API Gateway
  nginx:
    image: nginx:alpine
    container_name: the-dot-gateway-prod
    ports:
      - "81:80"
      - "444:443"
    volumes:
      - ./gateway/nginx.conf:/etc/nginx/nginx.conf
      - ./gateway/conf.d:/etc/nginx/conf.d
    depends_on:
      - auth-service
      - user-service
      - application-service
      - ticket-service
      - project-service
      - comment-service
      - reporting-service
      - audit-service
    networks:
      - the-dot-network-prod

  # Microservices
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: the-dot-auth-prod
    environment:
      NODE_ENV: production
      PORT: 3001
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/auth_db
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3101:3001"
    depends_on:
      - postgres
      - redis
    networks:
      - the-dot-network-prod

  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: the-dot-user-prod
    environment:
      NODE_ENV: production
      PORT: 3002
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/user_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3102:3002"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - the-dot-network-prod

  application-service:
    build:
      context: ./services/application-service
      dockerfile: Dockerfile
    container_name: the-dot-application-prod
    environment:
      NODE_ENV: production
      PORT: 3003
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/application_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3103:3003"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - the-dot-network-prod

  ticket-service:
    build:
      context: ./services/ticket-service
      dockerfile: Dockerfile
    container_name: the-dot-ticket-prod
    environment:
      NODE_ENV: production
      PORT: 3004
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/ticket_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3104:3004"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - minio
    networks:
      - the-dot-network-prod

  project-service:
    build:
      context: ./services/project-service
      dockerfile: Dockerfile
    container_name: the-dot-project-prod
    environment:
      NODE_ENV: production
      PORT: 3005
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/project_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3105:3005"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - the-dot-network-prod

  comment-service:
    build:
      context: ./services/comment-service
      dockerfile: Dockerfile
    container_name: the-dot-comment-prod
    environment:
      NODE_ENV: production
      PORT: 3006
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/comment_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3106:3006"
    depends_on:
      - postgres
      - redis
      - rabbitmq
      - minio
    networks:
      - the-dot-network-prod

  reporting-service:
    build:
      context: ./services/reporting-service
      dockerfile: Dockerfile
    container_name: the-dot-reporting-prod
    environment:
      NODE_ENV: production
      PORT: 3007
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/reporting_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      AUTH_SERVICE_URL: http://auth-service:3001
      USER_SERVICE_URL: http://user-service:3002
      APPLICATION_SERVICE_URL: http://application-service:3003
      TICKET_SERVICE_URL: http://ticket-service:3004
      PROJECT_SERVICE_URL: http://project-service:3005
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3107:3007"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - the-dot-network-prod

  audit-service:
    build:
      context: ./services/audit-service
      dockerfile: Dockerfile
    container_name: the-dot-audit-prod
    environment:
      NODE_ENV: production
      PORT: 3008
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/audit_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://admin:admin123@rabbitmq:5672
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-in-production
    ports:
      - "3108:3008"
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - the-dot-network-prod

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: the-dot-frontend-prod
    environment:
      - REACT_APP_API_URL=
    ports:
      - "3110:3000"
    depends_on:
      - nginx
    networks:
      - the-dot-network-prod

volumes:
  postgres_data_prod:
  redis_data_prod:
  rabbitmq_data_prod:
  minio_data_prod:

networks:
  the-dot-network-prod:
    driver: bridge
